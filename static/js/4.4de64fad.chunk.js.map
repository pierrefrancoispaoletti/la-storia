{"version":3,"sources":["components/AdminButtonBar/admin-button-bar.style.js","components/AdminButtonBar/AdminButtonBar.js","components/WineElement/WineElement.js","components/ProductElement/ProductElement.js","components/ProductOverview/ProductOverview.js","useFetchProducts/useFetchProducts.js","useRemoveDuplicateSpans/useRemoveDuplicateSpans.js","pages/ProductsPage/ProductsPage.js"],"names":["AdminButtonBarContainer","styled","div","AdminButtonContainer","AdminButton","button","colors","main","AdminButtonBar","_id","product","token","useSelector","selectCurrentUser","dispatch","useDispatch","type","onClick","toggleModal","setProductToEdit","icon","faEdit","size","color","updateProdut","visible","faEye","faEyeSlash","deleteProduct","faTrash","WineElement","couleur","map","isChecked","className","value","style","display","justifyContent","faWineBottle","Number","price","toFixed","ProductElement","description","title","category","user","role","every","ProductOverview","loading","products","setFilter","filter","TableauHomePage","LoaderElement","width","subCategory","findSubCategoryName","useFetchProducts","setLoading","categorySelected","selectProductsByCategory","useEffect","getProductsByLocation","placeLocation","useRemoveDuplicateSpans","forEach","classname","document","querySelectorAll","element","index","remove","ProductsPage","useParams","useState","selectProductsBySubCategory"],"mappings":"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","file":"static/js/4.4de64fad.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { colors } from \"../../_const\";\n\nexport const AdminButtonBarContainer = styled.div`\n  position: relative;\n  margin: 12px 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const AdminButtonContainer = styled.div`\n  margin: 8px;\n`;\n\nexport const AdminButton = styled.button`\n  border: none;\n  outline: none;\n  border-radius: 50px;\n  padding: 12px;\n  background: ${colors.main};\n  :active {\n    background: black;\n  }\n`;\n","import {\n  faEdit,\n  faEye,\n  faEyeSlash,\n  faTrash,\n} from \"@fortawesome/pro-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  AdminButton,\n  AdminButtonBarContainer,\n  AdminButtonContainer,\n} from \"./admin-button-bar.style\";\nimport {\n  deleteProduct,\n  updateProdut,\n} from \"../../redux/reducers/Products/querries\";\nimport {\n  setProductToEdit,\n  toggleModal,\n} from \"../../redux/reducers/Products/actions\";\nimport { selectCurrentUser } from \"../../redux/reducers/User/selector\";\n\nconst AdminButtonBar = ({ _id, product }) => {\n  const { token } = useSelector(selectCurrentUser);\n  const dispatch = useDispatch();\n  return (\n    <AdminButtonBarContainer>\n      <AdminButtonContainer>\n        <AdminButton\n          type=\"button\"\n          onClick={() => {\n            dispatch(toggleModal(\"editer\"));\n            dispatch(setProductToEdit(product));\n          }}\n        >\n          <FontAwesomeIcon icon={faEdit} size=\"2x\" color=\"purple\" />\n        </AdminButton>\n      </AdminButtonContainer>\n      <AdminButtonContainer>\n        <AdminButton\n          type=\"button\"\n          onClick={() =>\n            updateProdut({ _id, visible: !product?.visible }, dispatch, token)\n          }\n        >\n          <FontAwesomeIcon\n            icon={product?.visible ? faEye : faEyeSlash}\n            size=\"2x\"\n            color=\"grey\"\n          />\n        </AdminButton>\n      </AdminButtonContainer>\n      <AdminButtonContainer>\n        <AdminButton\n          type=\"button\"\n          onClick={() => deleteProduct(_id, dispatch, token)}\n        >\n          <FontAwesomeIcon icon={faTrash} size=\"2x\" color=\"red\" />\n        </AdminButton>\n      </AdminButtonContainer>\n    </AdminButtonBarContainer>\n  );\n};\n\nexport default AdminButtonBar;\n","import { faWineBottle } from \"@fortawesome/pro-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {\n  WinePriceContainer,\n  WinePriceElement,\n} from \"../TableauHomePage/tableau-homepage.style\";\n\nconst WineElement = ({ couleur }) => {\n  return (\n    <WinePriceContainer>\n      {couleur.map(\n        (color) =>\n          color?.isChecked && (\n            <WinePriceElement\n              className=\"price wineprice\"\n              key={color.value}\n              color={color.value}\n            >\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <span>\n                  <FontAwesomeIcon icon={faWineBottle} size=\"1x\" /> :\n                </span>\n                <span>{Number(color.price).toFixed(2)} €</span>\n              </div>\n            </WinePriceElement>\n          )\n      )}\n    </WinePriceContainer>\n  );\n};\n\nexport default WineElement;\n","import React from \"react\";\nimport AdminButtonBar from \"../AdminButtonBar/AdminButtonBar\";\nimport { TableauContent } from \"../TableauHomePage/tableau-homepage.style\";\nimport { selectCurrentUser } from \"../../redux/reducers/User/selector\";\nimport { useSelector } from \"react-redux\";\nimport WineElement from \"../WineElement/WineElement\";\n\nconst ProductElement = ({ product }) => {\n  const { _id, price, description, title, visible, category, couleur } =\n    product;\n  const user = useSelector(selectCurrentUser);\n  return (\n    <TableauContent visible={user?.role === \"isAdmin\" || visible}>\n      {user && user.role === \"isAdmin\" && (\n        <AdminButtonBar _id={_id} product={product} />\n      )}\n      <h3 className=\"title\">\n        <span>{`${visible ? \"\" : \"CACHÉ : \"} ${title}`}</span>\n        {category !== \"le-vin\" || couleur.every((color) => !color.isChecked) ? (\n          <span className=\"price\">{price?.toFixed(2)} €</span>\n        ) : (\n          <WineElement couleur={couleur} />\n        )}\n      </h3>\n      {/* <WineColorContainer>\n        {couleur.map(\n          (color) =>\n            color.isChecked && (\n              <WineItemElement key={color.value} color={color.value}>\n                <FontAwesomeIcon icon={faWineBottle} size=\"2x\" />\n              </WineItemElement>\n            )\n        )}\n      </WineColorContainer> */}\n      <p className=\"description\">{description}</p>\n    </TableauContent>\n  );\n};\n\nexport default ProductElement;\n","import React from \"react\";\nimport { findSubCategoryName } from \"../../redux/reducers/Products/utils\";\nimport LoaderElement from \"../Loader/LoaderElement\";\nimport ProductElement from \"../ProductElement/ProductElement\";\nimport TableauHomePage from \"../TableauHomePage/TableauHomePage\";\nconst ProductOverview = ({ loading, products, setFilter, filter }) => {\n  return (\n    <TableauHomePage setFilter={setFilter} filter={filter}>\n      {loading ? (\n        <LoaderElement />\n      ) : (\n        products?.map((product) => {\n          return (\n            <div key={product._id} style={{ width: \"100%\" }}>\n              {product?.subCategory && findSubCategoryName(product)}\n              <ProductElement product={product} />\n            </div>\n          );\n        })\n      )}\n    </TableauHomePage>\n  );\n};\n\nexport default ProductOverview;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductsByLocation } from \"../redux/reducers/Products/querries\";\nimport { placeLocation } from \"../_const\";\nimport { selectProductsByCategory } from \"../redux/reducers/Products/selectors\";\n\nfunction useFetchProducts(setLoading, categorySelected) {\n  const products = useSelector(selectProductsByCategory(categorySelected));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getProductsByLocation(placeLocation, dispatch, setLoading);\n  }, [dispatch, setLoading, categorySelected]);\n\n  return products;\n}\n\nexport default useFetchProducts;\n","import { useEffect } from \"react\";\n\nconst useRemoveDuplicateSpans = () => {\n  useEffect(() => {\n    const removeDuplicateSpans = (classname) => {\n      let spans = document.querySelectorAll(`.${classname}`);\n      spans.forEach((element, index) => {\n        if (index > 0) {\n          element?.remove();\n        }\n      });\n    };\n    let classNames = [\n      \"sapore-di-mare\",\n      \"moules\",\n      \"aperitifs\",\n      \"digestifs\",\n      \"eaux\",\n      \"softs\",\n      \"bieres\",\n      \"boissons-chaudes\",\n    ];\n    classNames.forEach((className) => removeDuplicateSpans(className));\n    //methode caca pour faire ça\n  });\n};\n\nexport default useRemoveDuplicateSpans;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport ProductOverview from \"../../components/ProductOverview/ProductOverview\";\nimport { selectProductsBySubCategory } from \"../../redux/reducers/Products/selectors\";\nimport useFetchProducts from \"../../useFetchProducts/useFetchProducts\";\nimport useRemoveDuplicateSpans from \"../../useRemoveDuplicateSpans/useRemoveDuplicateSpans\";\n\nconst ProductsPage = ({ loading, setLoading }) => {\n  const params = useParams();\n\n  let category = params.category || \"suggestions\";\n  useFetchProducts(setLoading, category);\n  useRemoveDuplicateSpans();\n  const [filter, setFilter] = useState(\"\");\n  const products = useSelector(selectProductsBySubCategory(filter, category));\n\n  useEffect(() => {\n    setFilter(\"\");\n  }, [loading, category]);\n\n  return (\n    <main>\n      <ProductOverview\n        products={products}\n        loading={loading}\n        setFilter={setFilter}\n        filter={filter}\n      />\n    </main>\n  );\n};\n\nexport default ProductsPage;\n"],"sourceRoot":""}